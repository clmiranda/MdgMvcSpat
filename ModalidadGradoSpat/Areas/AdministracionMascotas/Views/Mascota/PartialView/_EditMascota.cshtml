@model Mascota
@if (Model == null)
{
    <div class="shadow-lg border p-5 bg-white rounded">
        <p class="text-center">No se puede mostrar la informaci&oacute;n, la mascota no existe o el id de la denuncia es incorrecto.</p>
    </div>
}
else
{
    @await Html.PartialAsync("~/Views/RenderSweetAlert.cshtml")
    <div class="shadow-lg border p-5 bg-white rounded">
        @if (Model.Id == 0)
        {
            <div class="alert alert-warning alert-dismissible fade show" role="alert">
                <strong class="text-center">Podr&aacute;s asignar las Fotos cuando se agreguen los Datos de la Mascota</strong>
                <button type="button" class="close" data-dismiss="alert" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
        }
        <form asp-action="AddOrEditMascota" asp-controller="Mascota" onsubmit="return showForm(this);" autocomplete="off" method="post">
            <input type="hidden" asp-for="Id" value="@Model.Id" />
            <input type="hidden" asp-for="DenunciaId" value="@Model.DenunciaId" />
            <div class="row">
                <div class="form-group col-md-12 my-3">
                    <label for="idNombre">Ingrese el Nombre de la Mascota</label>
                    <input id="idNombre" type="text" asp-for="Nombre" class="form-control" />
                    @Html.ValidationMessageFor(x => x.Nombre, "", new { @class = "text-danger" })
                </div>
                <div class="form-group col-md-12 mb-3">
                    <label for="idEspecie">Ingrese la Especie</label>
                    <input id="idEspecie" type="text" asp-for="Especie" class="form-control" />
                    @Html.ValidationMessageFor(x => x.Especie, "", new { @class = "text-danger" })
                </div>
                <div class="form-group col-md-6 mb-3">
                    <label for="idCarac">Ingrese la Caracter&iacute;sticas de la Mascota:</label>
                    <textarea id="idCarac" type="text" asp-for="Caracteristicas" class="form-control"></textarea>
                    @Html.ValidationMessageFor(x => x.Caracteristicas, "", new { @class = "text-danger" })
                </div>
                <div class="form-group col-md-6 mb-3">
                    <label for="idRasgos">Ingrese los Rasgos Particulares de la Mascota:</label>
                    <textarea id="idRasgos" type="text" asp-for="RasgosParticulares" class="form-control"></textarea>
                    @Html.ValidationMessageFor(x => x.RasgosParticulares, "", new { @class = "text-danger" })
                </div>
                <div id="idCheckSexo" class="form-group col-md-6 mb-3">
                    <label>Elija el Sexo de la Mascota:</label>
                    <div class="form-check">
                        <input class="form-check-input" type="radio" id="radioButtonSexo1" value="Macho" asp-for="Sexo" checked>
                        <label class="form-check-label" for="radioButtonSexo1">
                            Macho
                        </label>
                    </div>
                    <div class="form-check">
                        <input class="form-check-input" type="radio" id="radioButtonSexo2" value="Hembra" asp-for="Sexo">
                        <label class="form-check-label" for="radioButtonSexo2">
                            Hembra
                        </label>
                    </div>
                    @Html.ValidationMessageFor(x => x.Sexo, "", new { @class = "text-danger" })
                </div>
                <div class="form-group col-md-6 mb-3">
                    <label for="idTamano">Ingrese el tamaño de la Mascota (Ej: Pequeño, Mediano, etc.)</label>
                    <input id="idTamano" type="text" asp-for="Tamano" class="form-control" />
                    @Html.ValidationMessageFor(x => x.Tamano, "", new { @class = "text-danger" })
                </div>
                <div id="idCheckEsterilizado" class="form-group col-md-6 mb-3">
                    <label>¿La Mascota se encuentra esterilizada?:</label>
                    <div class="form-check">
                        <input class="form-check-input" type="radio" id="radioButtonPositivo" value="true" asp-for="Esterilizado" checked>
                        <label class="form-check-label" for="radioButtonPositivo">
                            S&iacute;
                        </label>
                    </div>
                    <div class="form-check">
                        <input class="form-check-input" type="radio" id="radioButtonNegativo" value="false" asp-for="Esterilizado">
                        <label class="form-check-label" for="radioButtonNegativo">
                            No
                        </label>
                    </div>
                    @Html.ValidationMessageFor(x => x.Esterilizado, "", new { @class = "text-danger" })
                </div>
                <div class="form-group col-md-6 mb-3">
                    <label for="idEdad">Ingrese la Edad aproximada de la Mascota (Ej: 2 meses, 1 a&ntilde;o, etc.)</label>
                    <input id="idEdad" type="text" asp-for="Edad" class="form-control" />
                    @Html.ValidationMessageFor(x => x.Edad, "", new { @class = "text-danger" })
                </div>
            </div>
            @if (Model.Id == 0)
            {
                <button type="submit" class="btn btn-primary" disabled>
                    Registrar
                </button>
            }
            else
            {
                <button type="submit" class="btn btn-primary" disabled>
                    Modificar
                </button>
            }
        </form>
        <script type="text/javascript" language=javascript>
            $.validator.unobtrusive.parse(document);
            var _0xa260 = ['1463185WoWynm', '1TaaDuU', 'form\x20[class=\x22form-check-input\x22]', '166774rBxIFM', '466207cQELza', 'form\x20button[type=\x22submit\x22]', '475451TBzUfP', 'change\x20input', '1217817lvbiGU', '1PZWGOe', '455757blIwbw', 'disabled', '3IRRUUI', '9ItmTRe', 'form\x20[class=\x22form-control\x22]', '2418029PALuiX', 'prop']; function _0x4110(_0x253373, _0x34dd23) { return _0x4110 = function (_0xa2603f, _0x41105a) { _0xa2603f = _0xa2603f - 0x191; var _0x15ba3d = _0xa260[_0xa2603f]; return _0x15ba3d; }, _0x4110(_0x253373, _0x34dd23); } var _0x152491 = _0x4110; (function (_0x43bd59, _0x5b8b51) { var _0x55f8f3 = _0x4110; while (!![]) { try { var _0x418f54 = -parseInt(_0x55f8f3(0x194)) * parseInt(_0x55f8f3(0x19d)) + -parseInt(_0x55f8f3(0x199)) + -parseInt(_0x55f8f3(0x192)) * -parseInt(_0x55f8f3(0x191)) + -parseInt(_0x55f8f3(0x19c)) * -parseInt(_0x55f8f3(0x195)) + -parseInt(_0x55f8f3(0x1a1)) + -parseInt(_0x55f8f3(0x19a)) * -parseInt(_0x55f8f3(0x19f)) + parseInt(_0x55f8f3(0x197)); if (_0x418f54 === _0x5b8b51) break; else _0x43bd59['push'](_0x43bd59['shift']()); } catch (_0x4d7427) { _0x43bd59['push'](_0x43bd59['shift']()); } } }(_0xa260, 0xbc214), $(_0x152491(0x196))['on'](_0x152491(0x1a0), function () { var _0x4c7290 = _0x152491; $(_0x4c7290(0x19e))[_0x4c7290(0x198)]('disabled', ![]); }), $(_0x152491(0x19b))['on'](_0x152491(0x1a0), function () { var _0x1f1ced = _0x152491; $(_0x1f1ced(0x19e))['prop'](_0x1f1ced(0x193), ![]); }));
        </script>
    </div>
}