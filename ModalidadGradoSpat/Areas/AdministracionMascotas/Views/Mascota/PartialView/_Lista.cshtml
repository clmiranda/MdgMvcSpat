@model List<Mascota>
@await Html.PartialAsync("~/Views/RenderSweetAlert.cshtml")
<div class="d-xl-flex justify-content-between my-3">
    <form class="form-inline mr-3" asp-action="ReturnVista" method="post" onsubmit="return send(this);">
        <div class="input-group">
            <div class="input-group-prepend">
                <label class="input-group-text" for="selectCantidad">Cantidad:</label>
            </div>
            <select id="selectCantidad" name="sizePage" class="custom-select dropdown-toggle mr-3">
                @if (int.Parse(ViewData["itemsPerPage"].ToString()) == 5)
                {
                    <option value="5" selected>5</option>
                    <option value="10">10</option>
                    <option value="20">20</option>
                    <option value="50">50</option>
                }
                else if (int.Parse(ViewData["itemsPerPage"].ToString()) == 10)
                {
                    <option value="5">5</option>
                    <option value="10" selected>10</option>
                    <option value="20">20</option>
                    <option value="50">50</option>
                }
                else if (int.Parse(ViewData["itemsPerPage"].ToString()) == 20)
                {
                    <option value="5">5</option>
                    <option value="10">10</option>
                    <option value="20" selected>20</option>
                    <option value="50">50</option>
                }
                else if (int.Parse(ViewData["itemsPerPage"].ToString()) == 50)
                {
                    <option value="5">5</option>
                    <option value="10">10</option>
                    <option value="20">20</option>
                    <option value="50" selected>50</option>
                    <option value="100">100</option>
                }
            </select>
        </div>
        <div class="flex-row">
            <input id="inputBuscar" placeholder="Buscar" autocomplete="off" type="text" class="form-control mr-3" name="search" value="@ViewData["search"]">
            <button id="buscar" type="submit" class="btn btn-primary mr-3" disabled>Buscar</button>
            <button id="resetear" type="submit" class="btn btn-primary">Reiniciar</button>
        </div>
    </form>
    <div class="flex-row">
        <button onclick="location.href='@Url.Action("ExcelMascotas", "Mascota", new { area="AdministracionMascotas"})'" type="button" class="btn btn-primary">
            <i class="fas fa-file-excel fa-lg mr-2"></i>Excel Mascotas
        </button>
        <button type="button" class="btn btn-success" onclick="generatePDF()">
            <i class="fas fa-file-pdf fa-lg mr-2"></i>Ver PDF
        </button>
    </div>
</div>
<div class="table-responsive mt-sm-3 mt-md-5">
    <table id="tableMascota" class="table table-hover table-bordered" style="width:100%">
        <thead>
            <tr>
                <th>Id</th>
                <th>Titulo Denuncia de Mascota</th>
                <th>Nombre de Mascota</th>
                <th>Cambio de Estado</th>
                <th>Acciones</th>
            </tr>
        </thead>
        <tbody id="tbodyMascotas">
            @if (Model.Count() <= 0)
            {
                <tr>
                    <td colspan="4"><h1 class="text-center">No hay registros para mostrar.</h1></td>
                </tr>
            }
            else
            {
                @foreach (var item in Model)
                {
                    <tr>
                        <td width="5%">
                            @item.Id
                        </td>
                        <td width="30%">
                            @item.Denuncia.Titulo
                        </td>
                        <td width="30%">
                            @item.Nombre
                        </td>
                        <td width="25%">
                            @if (item.Estado.ToUpper().Equals("ADOPTADA"))
                            {
                                <p><strong>La mascota ya fue adoptada.</strong></p>
                            }
                            else if (item.Estado.ToUpper().Equals("EN PROCESO"))
                            {
                                <p><strong>La mascota se encuentra en proceso de adopci&oacute;n.</strong></p>
                            }
                            else
                            {
                                <form asp-action="CambiarEstado" asp-route-id="@item.Id">
                                    @if (item.Estado.ToUpper().Equals("ACTIVO"))
                                    {
                                        <select name="estado" class="form-control">
                                            <option value="Activo" selected>Activo</option>
                                            <option value="Inactivo">Inactivo</option>
                                        </select>
                                    }
                                    else if (item.Estado.ToUpper().Equals("INACTIVO"))
                                    {
                                        <select name="estado" class="form-control">
                                            <option value="Activo">Activo</option>
                                            <option value="Inactivo" selected>Inactivo</option>
                                        </select>
                                    }
                                </form>
                            }
                        </td>
                        <td width="10%">
                            <div class="d-flex justify-content-center align-items-center">
                                <a role="button" href="@Url.Action("EditMascota", "Mascota",new { id=item.Id, area="AdministracionMascotas"})" class="btn btn-success">
                                    <i class="fas fa-dog fa-2"></i>
                                </a>
                                @if (item.Estado.Equals("Inactivo"))
                                {
                                    <a role="button" class="btn btn-primary" href="@Url.Action("Lista","ReporteTratamiento", new {id=item.Id, area="AdministracionMascotas"})">
                                        <i class="fas fa-list"></i>
                                    </a>
                                }
                                else
                                {
                                    <button type="button" class="btn btn-primary" disabled>
                                        <i class="fas fa-list"></i>
                                    </button>
                                }
                            </div>
                        </td>
                    </tr>
                }
            }
        </tbody>
        <tfoot>
            <tr>
                <th>Id</th>
                <th>Titulo Denuncia de Mascota</th>
                <th>Nombre de Mascota</th>
                <th>Cambio de Estado</th>
                <th>Acciones</th>
            </tr>
        </tfoot>
    </table>
</div>
<!-- pager -->
<nav class="table-responsive">
    <form asp-action="ReturnVista" method="post" onsubmit="return send(this);">
        <input type="hidden" name="sizePage" value="@ViewData["itemsPerPage"]" />
        <input type="hidden" name="search" value="@ViewData["search"]" />
        <input type="hidden" name="currentPage" />
        <ul class="pagination justify-content-center d-flex flex-wrap">
            @if (int.Parse(ViewData["currentPage"].ToString()) > 1)
            {
                <li class="page-item">
                    <button class="page-link" value="1" onclick="GetValueButton(this.value)">Primer</button>
                </li>
                <li class="page-item">
                    @{ int p = int.Parse(ViewData["currentPage"].ToString()) - 1;}
                    <button class="page-link" value="@p" onclick="GetValueButton(this.value)">Anterior</button>
                </li>
            }
            else
            {
                <li class="page-item">
                    <button type="button" class="page-link">Primer<span class="sr-only"></span></button>
                </li>
                <li class="page-item">
                    <button type="button" class="page-link">Anterior<span class="sr-only"></span></button>
                </li>
            }

            @for (var pagina = 1; pagina <= int.Parse(ViewData["totalPages"].ToString()); pagina++)
            {
                <li class="page-item @(pagina == int.Parse(ViewData["currentPage"].ToString()) ? "active" : "")">
                    @if (pagina == int.Parse(ViewData["currentPage"].ToString()))
                    {
                        <button type="button" class="page-link" value="@pagina" role="button">@(pagina)<span class="sr-only"></span></button>
                    }
                    else
                    {
                        <button class="page-link" value="@pagina" onclick="GetValueButton(this.value)">@(pagina)</button>
                    }
                </li>
            }

            @if (int.Parse(ViewData["currentPage"].ToString()) < int.Parse(ViewData["totalPages"].ToString()))
            {
                <li class="page-item">
                    @{int n = int.Parse(ViewData["currentPage"].ToString()) + 1;}
                    <button class="page-link" value="@n" onclick="GetValueButton(this.value)">Siguiente</button>
                </li>
                <li class="page-item">
                    <button class="page-link" value="@ViewData["totalPages"]" onclick="GetValueButton(this.value)">&Uacute;ltimo</button>
                </li>
            }
            else
            {
                <li class="page-item">
                    <button type="button" class="page-link">Siguiente<span class="sr-only"></span></button>
                </li>
                <li class="page-item">
                    <button type="button" class="page-link">&Uacute;ltimo<span class="sr-only"></span></button>
                </li>
            }
        </ul>
    </form>
</nav>
<script src="https://cdnjs.cloudflare.com/ajax/libs/jspdf/1.3.4/jspdf.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/jspdf-autotable/3.5.14/jspdf.plugin.autotable.min.js"></script>
<script>
    function generatePDF() {
        const doc = new jsPDF()
        doc.autoTable({
            head: [['Id','Nombre', 'Sexo', 'Especie', 'Caracteristicas', 'Rasgos Particulares', 'Tamaño', 'Edad','FechaCreacion']],
            body: [
                @foreach (var item in Model)
                {
                    <text>
                ['@item.Id','@item.Nombre', '@item.Sexo', '@item.Especie', '@item.Caracteristicas', '@item.RasgosParticulares', '@item.Tamano', '@item.Edad', '@item.FechaCreacion.ToShortDateString()'],
            </text>
                }
            ],
            theme: 'grid'
        });
        window.open(URL.createObjectURL(doc.output("blob")))
    }
    var _0x2a88 = ['#view-all', '1BfWZUO', 'click', 'form', 'location', '421431FuVaZo', 'prop', 'val', 'ajax', '245xZjhmS', '349497OgCTYl', 'href', '4799DIXTRJ', 'html', 'change', '/Error/', '1409008wfKkiu', '371028yDYOEX', 'status', 'select[name=\x27sizePage\x27]\x20option', '#buscar', '910793SwBgJT', 'fail', '670147sYnrDJ', '1dWKuxj', 'select', 'POST', '#resetear', 'action']; var _0x417c12 = _0x3ebe; function _0x3ebe(_0x384f7b, _0xe2be9c) { return _0x3ebe = function (_0x2a882d, _0x3ebeae) { _0x2a882d = _0x2a882d - 0xa8; var _0x27fae7 = _0x2a88[_0x2a882d]; return _0x27fae7; }, _0x3ebe(_0x384f7b, _0xe2be9c); } (function (_0x3ebef4, _0x3b5115) { var _0x31ba6c = _0x3ebe; while (!![]) { try { var _0x3eefce = -parseInt(_0x31ba6c(0xb6)) + -parseInt(_0x31ba6c(0xbc)) * parseInt(_0x31ba6c(0xc3)) + -parseInt(_0x31ba6c(0xaf)) * parseInt(_0x31ba6c(0xbd)) + parseInt(_0x31ba6c(0xaa)) + -parseInt(_0x31ba6c(0xba)) + -parseInt(_0x31ba6c(0xae)) * -parseInt(_0x31ba6c(0xb1)) + parseInt(_0x31ba6c(0xb5)); if (_0x3eefce === _0x3b5115) break; else _0x3ebef4['push'](_0x3ebef4['shift']()); } catch (_0x5c9f46) { _0x3ebef4['push'](_0x3ebef4['shift']()); } } }(_0x2a88, 0xac0d9)); function GetValueButton(_0x1fc611) { var _0x2a7535 = _0x3ebe; $('[name=\x27currentPage\x27]')[_0x2a7535(0xac)](_0x1fc611); } $(_0x417c12(0xc0))['on'](_0x417c12(0xc4), function () { var _0x4e6182 = _0x417c12; $(_0x4e6182(0xb8))[_0x4e6182(0xac)]('10'), $('input[name=\x27search\x27]')[_0x4e6182(0xac)](''); }), $('#inputBuscar')['keyup'](function () { var _0x1f50f7 = _0x417c12; $(_0x1f50f7(0xb9))[_0x1f50f7(0xab)]('disabled', this['value'] == '' ? !![] : ![]); }), $(_0x417c12(0xbe))['on'](_0x417c12(0xb3), function () { var _0x156a0b = _0x417c12; $[_0x156a0b(0xad)]({ 'type': _0x156a0b(0xbf), 'url': this[_0x156a0b(0xa8)][_0x156a0b(0xc1)], 'data': new FormData(this[_0x156a0b(0xa8)]), 'contentType': ![], 'processData': ![], 'success': function (_0x336ee8) { var _0x5f33cb = _0x156a0b; $('#view-all')['html'](_0x336ee8[_0x5f33cb(0xb2)]); } })[_0x156a0b(0xbb)](function (_0x699d6f, _0x359d14, _0x507a21) { var _0x3ddce3 = _0x156a0b; window[_0x3ddce3(0xa9)][_0x3ddce3(0xb0)] = _0x3ddce3(0xb4) + _0x699d6f[_0x3ddce3(0xb7)]; }); }), send = _0x1c58d0 => { var _0x42dd90 = _0x417c12; return $[_0x42dd90(0xad)]({ 'type': 'POST', 'url': _0x1c58d0['action'], 'data': new FormData(_0x1c58d0), 'contentType': ![], 'processData': ![], 'success': function (_0x123727) { var _0x3228a8 = _0x42dd90; $(_0x3228a8(0xc2))['html'](_0x123727[_0x3228a8(0xb2)]); } })[_0x42dd90(0xbb)](function (_0x409250, _0x257e74, _0x2934df) { var _0x3cf6ae = _0x42dd90; window['location'][_0x3cf6ae(0xb0)] = _0x3cf6ae(0xb4) + _0x409250[_0x3cf6ae(0xb7)]; }), ![]; };
</script>