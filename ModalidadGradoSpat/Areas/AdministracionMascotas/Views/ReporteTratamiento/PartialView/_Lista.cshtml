@model Mascota
@await Html.PartialAsync("~/Views/RenderSweetAlert.cshtml")

@if (Model==null)
{
    <div class="card">
        <div class="card-body">
            <p class="card-text">
                La mascota no existe, no se puede listar.
            </p>
        </div>
    </div>
}
else
{
    @if (Model.Estado.Equals("Inactivo"))
    {
        <div class="d-lg-flex justify-content-between my-3">
            <button type="button" onclick="showInPopup('@Url.Action("AddOrEditReporteTratamiento","ReporteTratamiento",new { id=0, area="AdministracionMascotas"},Context.Request.Scheme)', 'Nuevo Reporte Tratamiento');" class="btn btn-primary btn-lg mr-3" data-toggle="modal" data-target="#form-modal">
            <i class="fas fa-plus-square"></i>
            </button>
            <button type="button" class="ml-5 btn btn-warning btn-lg" onclick="location.href='@Url.Action("Detalle","ReporteTratamiento",new {id=Model.Id, area="AdministracionMascotas"})'">
            <i class="fas fa-eye"></i>
            </button>
        </div>
        <div class="table-responsive">
            <table id="tableReporteTratamiento" class="table table-bordered table-hover">
                <thead>
                    <tr>
                        <th>Id</th>
                        <th>Titulo</th>
                        <th>Descripcion</th>
                        <th>Acciones</th>
                    </tr>
                </thead>
                <tbody id="tbodyReporteTratamiento">
                    @foreach (var item in Model.ReporteTratamientos)
                    {
                        <tr>
                            <td width="5%">
                                <p>@item.Id</p>
                            </td>
                            <td width="30%">
                                <p>@item.Titulo</p>
                            </td>
                            <td width="60%">
                                <p>@item.Descripcion</p>
                            </td>
                            <td width="5%">
                                <div class="d-flex flex-row">
                                    <button type="button" onclick="showInPopup('@Url.Action("AddOrEditReporteTratamiento","ReporteTratamiento",new { id=item.Id,area="AdministracionMascotas"},Context.Request.Scheme)','Actualizar Reporte Tratamiento');" class="btn btn-info" data-toggle="modal" data-target="#form-modal"><i class="fa fa-edit fa-2" aria-hidden="true"></i></button>
                                    <form asp-action="DeleteReporteTratamiento" asp-route-id="@item.Id" onsubmit="return jQueryAjaxDelete(this);" class="d-inline">
                                        <button type="submit" class="btn btn-danger">
                                            <i class="fa fa-trash fa-2" aria-hidden="true"></i>
                                        </button>
                                    </form>
                                </div>
                            </td>
                        </tr>
                    }
                </tbody>
                <tfoot>
                    <tr>
                        <th>Id</th>
                        <th>Titulo</th>
                        <th>Descripcion</th>
                        <th>Acciones</th>
                    </tr>
                </tfoot>
            </table>
        </div>
        <script>
            $('#tableReporteTratamiento').DataTable({
                "processing": true,
                "language": {
                    "sProcessing": "Procesando...",
                    "sLengthMenu": "Mostrar _MENU_ registros",
                    "sZeroRecords": "No se encontraron resultados",
                    "sEmptyTable": "Ningún dato disponible en esta tabla =(",
                    "sInfo": "Mostrando registros del _START_ al _END_ de un total de _TOTAL_ registros",
                    "sInfoEmpty": "Mostrando registros del 0 al 0 de un total de 0 registros",
                    "sInfoFiltered": "(filtrado de un total de _MAX_ registros)",
                    "sInfoPostFix": "",
                    "sSearch": "Buscar:",
                    "sUrl": "",
                    "sInfoThousands": ",",
                    "sLoadingRecords": "Cargando...",
                    "oPaginate": {
                        "sFirst": "Primero",
                        "sLast": "Último",
                        "sNext": "Siguiente",
                        "sPrevious": "Anterior"
                    },
                    "oAria": {
                        "sSortAscending": ": Activar para ordenar la columna de manera ascendente",
                        "sSortDescending": ": Activar para ordenar la columna de manera descendente"
                    },
                    "buttons": {
                        "copy": "Copiar",
                        "colvis": "Visibilidad"
                    }
                }
            });
        </script>
    }
    else
    {
        <div class="card">
            <div class="card-body">
                <p class="card-text">
                    El estado de la mascota debe ser "Inactivo" para poder visualizar.
                </p>
            </div>
        </div>
    }
}