@model List<Denuncia>
@await Html.PartialAsync("~/Views/RenderSweetAlert.cshtml")
<div class="d-xl-flex justify-content-between my-3">
    <form class="form-inline mr-3" asp-action="ReturnVista" method="post" onsubmit="return send(this);">
        <div class="input-group">
            <div class="input-group-prepend">
                <label class="input-group-text" for="selectCantidad">Cantidad:</label>
            </div>
            <select id="selectCantidad" name="sizePage" class="custom-select dropdown-toggle mr-3">
                @if (int.Parse(ViewData["itemsPerPage"].ToString()) == 5)
                {
                    <option value="5" selected>5</option>
                    <option value="10">10</option>
                    <option value="20">20</option>
                    <option value="50">50</option>
                    <option value="100">100</option>
                }
                else if (int.Parse(ViewData["itemsPerPage"].ToString()) == 10)
                {
                    <option value="5">5</option>
                    <option value="10" selected>10</option>
                    <option value="20">20</option>
                    <option value="50">50</option>
                    <option value="100">100</option>
                }
                else if (int.Parse(ViewData["itemsPerPage"].ToString()) == 20)
                {
                    <option value="5">5</option>
                    <option value="10">10</option>
                    <option value="20" selected>20</option>
                    <option value="50">50</option>
                    <option value="100">100</option>
                }
                else if (int.Parse(ViewData["itemsPerPage"].ToString()) == 50)
                {
                    <option value="5">5</option>
                    <option value="10">10</option>
                    <option value="20">20</option>
                    <option value="50" selected>50</option>
                    <option value="100">100</option>
                }
                else if (int.Parse(ViewData["itemsPerPage"].ToString()) == 100)
                {
                    <option value="5">5</option>
                    <option value="10">10</option>
                    <option value="20">20</option>
                    <option value="50">50</option>
                    <option value="100" selected>100</option>
                }
            </select>
        </div>
        <div class="flex-row">
            <input id="inputBuscar" placeholder="Buscar" autocomplete="off" type="text" class="form-control mr-3" name="search" value="@ViewData["search"]">
            <button id="buscar" type="submit" class="btn btn-primary mr-sm-3" disabled>Buscar</button>
            <button id="resetear" type="submit" class="btn btn-primary">Reiniciar</button>
        </div>
    </form>
    <div class="flex-row">
        <a asp-action="ExcelDenuncias" role="button" type="submit" class="btn btn-primary">
            <i class="fas fa-file-excel fa-lg mr-2"></i>Excel Denuncias
        </a>
        <a class="btn btn-success" onclick="generatePDF()">
            <i class="fas fa-file-pdf fa-lg mr-2"></i>Ver PDF
        </a>
    </div>
</div>
<button role="button" asp-action="AddOrEditDenuncia" onclick="showInPopup('@Url.Action("AddOrEditDenuncia","Denuncia",new { id=0, area="AdministracionMascotas"},Context.Request.Scheme)', 'Nueva Denuncia');" class="btn btn-primary mb-3" data-toggle="modal" data-target="#form-modal">
    <i class="fas fa-plus-square fa-lg mr-2"></i>Agregar Denuncia
</button>
<div class="table-responsive">
    <table id="tableDenuncia" class="table table-hover table-bordered" style="width:100%">
        <thead>
            <tr>
                <th>Id</th>
                <th>Titulo</th>
                <th>Descripcion</th>
                <th>Nombre Mascota</th>
                <th>Acciones</th>
            </tr>
        </thead>
        <tbody id="tbodyDenuncia">
            @if (Model.Count() <= 0)
            {
                <tr>
                    <td colspan="4"><h1 class="text-center">No hay registros para mostrar.</h1></td>
                </tr>
            }
            else
            {
                @foreach (var item in Model)
                {
                    <tr>
                        <td width="5%">
                            <p>@item.Id</p>
                        </td>
                        <td width="20%">
                            <p>@item.Titulo</p>
                        </td>
                        <td width="40%">
                            <p>@item.Descripcion</p>
                        </td>
                        <td width="20%">
                            @if (item.Mascota != null)
                            {
                                <p>
                                    @item.Mascota.Nombre
                                </p>
                            }
                            else
                            {
                                <p>No tiene mascota creada</p>
                            }
                        </td>
                        <td width="10%">
                            <div class="d-flex flex-row">
                                <button type="button" onclick="location.href='@Url.Action("EditMascota", "Mascota",new { id=item.Id, area="AdministracionMascotas"})'" class="btn btn-success"><i class="fas fa-dog fa-2"></i></button>
                                <button type="button" asp-action="AddOrEditDenuncia" onclick="showInPopup('@Url.Action("AddOrEditDenuncia","Denuncia",new { id=item.Id,area="AdministracionMascotas"})','Actualizar Denuncia');" class="btn btn-info" data-toggle="modal" data-target="#form-modal"><i class="fa fa-edit fa-2" aria-hidden="true"></i></button>
                                <form asp-action="DeleteDenuncia" asp-route-id="@item.Id" onsubmit="return jQueryAjaxDelete(this);" class="d-inline">
                                    <button type="submit" class="btn btn-danger">
                                        <i class="fa fa-trash fa-2" aria-hidden="true"></i>
                                    </button>
                                </form>
                            </div>
                        </td>
                    </tr>
                }
            }
        </tbody>
        <tfoot>
            <tr>
                <th>Id</th>
                <th>Titulo</th>
                <th>Descripcion</th>
                <th>Nombre Mascota</th>
                <th>Acciones</th>
            </tr>
        </tfoot>
    </table>
</div>
<!-- pager -->
<nav class="table-responsive">
    <form asp-action="ReturnVista" method="post" onsubmit="return send(this);">
        <input type="hidden" name="sizePage" value="@ViewData["itemsPerPage"]" />
        <input type="hidden" name="search" value="@ViewData["search"]" />
        <input type="hidden" name="currentPage" />
        <ul class="pagination justify-content-center d-flex flex-wrap">
            @if (int.Parse(ViewData["currentPage"].ToString()) > 1)
            {
                <li class="page-item">
                    <button class="page-link" value="1" onclick="GetValueButton(this.value)">Primer</button>
                </li>
                <li class="page-item">
                    @{ int p = int.Parse(ViewData["currentPage"].ToString()) - 1;}
                    <button class="page-link" value="@p" onclick="GetValueButton(this.value)">Anterior</button>
                </li>
            }
            else
            {
                <li class="page-item">
                    <button type="button" class="page-link">Primer<span class="sr-only"></span></button>
                </li>
                <li class="page-item">
                    <button type="button" class="page-link">Anterior<span class="sr-only"></span></button>
                </li>
            }

            @for (var pagina = 1; pagina <= int.Parse(ViewData["totalPages"].ToString()); pagina++)
            {
                <li class="page-item @(pagina == int.Parse(ViewData["currentPage"].ToString()) ? "active" : "")">
                    @if (pagina == int.Parse(ViewData["currentPage"].ToString()))
                    {
                        <button type="button" class="page-link" value="@pagina" role="button">@(pagina)<span class="sr-only"></span></button>
                    }
                    else
                    {
                        <button class="page-link" value="@pagina" onclick="GetValueButton(this.value)">@(pagina)</button>
                    }
                </li>
            }

            @if (int.Parse(ViewData["currentPage"].ToString()) < int.Parse(ViewData["totalPages"].ToString()))
            {
                <li class="page-item">
                    @{int n = int.Parse(ViewData["currentPage"].ToString()) + 1;}
                    <button class="page-link" value="@n" onclick="GetValueButton(this.value)">Siguiente</button>
                </li>
                <li class="page-item">
                    <button class="page-link" value="@ViewData["totalPages"]" onclick="GetValueButton(this.value)">&Uacute;ltimo</button>
                </li>
            }
            else
            {
                <li class="page-item">
                    <button type="button" class="page-link">Siguiente<span class="sr-only"></span></button>
                </li>
                <li class="page-item">
                    <button type="button" class="page-link">&Uacute;ltimo<span class="sr-only"></span></button>
                </li>
            }
        </ul>
    </form>
</nav>
<script src="https://cdnjs.cloudflare.com/ajax/libs/jspdf/1.3.4/jspdf.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/jspdf-autotable/3.5.14/jspdf.plugin.autotable.min.js"></script>
<script>
    function generatePDF() {
        const doc = new jsPDF()
        doc.autoTable({
            head: [['Id', 'Titulo', 'Descripcion']],
            body: [
                @foreach (var item in Model)
                {
                    <text>
                ['@item.Id', '@item.Titulo', '@item.Descripcion'],
            </text>
                }
            ],
            theme: 'grid'
        });
        window.open(URL.createObjectURL(doc.output("blob")))
    }
    function GetValueButton(val) {
        $("[name='currentPage']").val(val);
    }
    $("#resetear").on("click", function () {
        $("select option").val("10");
        $("input[name='search']").val("");
    });
    $('#inputBuscar').keyup(function () {
        $('#buscar').prop('disabled', this.value == "" ? true : false);
    });
    $('select').on('change', function () {
            $.ajax({
                type: "POST",
                url: this.form.action,
                data: new FormData(this.form),
                contentType: false,
                processData: false,
                success: function (res) {
                    $('#view-all').html(res);
                }
            })
                .fail(function (jqXHR, textStatus, errorThrown) {
                    window.location.href = "/Home/Error/" + jqXHR.status;
                })
    });
    send = form => {
            $.ajax({
                type: "POST",
                url: form.action,
                data: new FormData(form),
                contentType: false,
                processData: false,
                success: function (res) {
                    $('#view-all').html(res);
                }
            })
                .fail(function (jqXHR, textStatus, errorThrown) {
                    window.location.href = "/Home/Error/" + jqXHR.status;
                })
            return false;
    };
</script>