@model List<Seguimiento>
@await Html.PartialAsync("~/Views/RenderSweetAlert.cshtml")
<div class="d-lg-flex justify-content-between my-3">
    <form class="form-inline mr-2" method="post" asp-action="ReturnVista" onsubmit="return send(this);">
        <div class="input-group">
            <div class="input-group-prepend">
                <label class="input-group-text" for="idSelectCantidad">Cantidad:</label>
            </div>
            <select id="idSelectCantidad" name="sizePage" class="custom-select dropdown-toggle mr-2">
                @if (int.Parse(ViewData["itemsPerPage"].ToString()) == 5)
                {
                    <option value="5" selected>5</option>
                    <option value="10">10</option>
                    <option value="20">20</option>
                    <option value="50">50</option>
                }
                else if (int.Parse(ViewData["itemsPerPage"].ToString()) == 10)
                {
                    <option value="5">5</option>
                    <option value="10" selected>10</option>
                    <option value="20">20</option>
                    <option value="50">50</option>
                }
                else if (int.Parse(ViewData["itemsPerPage"].ToString()) == 20)
                {
                    <option value="5">5</option>
                    <option value="10">10</option>
                    <option value="20" selected>20</option>
                    <option value="50">50</option>
                }
                else if (int.Parse(ViewData["itemsPerPage"].ToString()) == 50)
                {
                    <option value="5">5</option>
                    <option value="10">10</option>
                    <option value="20">20</option>
                    <option value="50" selected>50</option>
                }
            </select>
        </div>
        <button id="resetear" type="submit" class="btn btn-primary">Reiniciar</button>
    </form>
</div>
<div class="table-responsive mt-sm-3 mt-md-5">
    <table id="tableVoluntarioSeguimiento" class="table table-bordered table-hover">
        <thead>
            <tr>
                <th>Id</th>
                <th>Rango de Fechas</th>
                <th>Nº de Reportes</th>
                <th>Acciones</th>
            </tr>
        </thead>
        <tbody id="tbodyVoluntarioSeguimiento">
            @if (Model.Count() <= 0)
            {
                <tr>
                    <td colspan="4"><h1 class="text-center">No hay registros para mostrar.</h1></td>
                </tr>
            }
            else
            {
                @foreach (var item in Model)
                {
                    <tr>
                        <td width="3%">
                            @item.Id
                        </td>
                        <td>
                            <p>Desde @item.FechaInicio.ToShortDateString() hasta @item.FechaConclusion.ToShortDateString()</p>
                        </td>
                        <td>
                            @if (item.ReporteSeguimientos == null)
                            {
                                <p>No tiene reportes creados.</p>
                            }
                            else
                            {
                                <p>@item.ReporteSeguimientos.Count() reporte(s).</p>
                            }
                        </td>
                        <td width="10%">
                            <a role="button" class="btn btn-success" href="@Url.Action("ListaReportes","ReporteVoluntario", new { id=item.Id, area="AdministracionSeguimientos"})">
                                <i class="fas fa-list" aria-hidden="true"></i>
                            </a>
                        </td>
                    </tr>
                }
            }
        </tbody>
        <tfoot>
            <tr>
                <th>Id</th>
                <th>Rango de Fechas</th>
                <th>Nº de Reportes</th>
                <th>Acciones</th>
            </tr>
        </tfoot>
    </table>
</div>
<nav class="table-responsive">
    <form asp-action="ReturnVista" method="post" onsubmit="return send(this);">
        <input type="hidden" name="sizePage" value="@ViewData["itemsPerPage"]" />
        <input type="hidden" name="currentPage" />
        <ul class="pagination justify-content-center d-flex flex-wrap">
            @if (int.Parse(ViewData["currentPage"].ToString()) > 1)
            {
                <li class="page-item">
                    <button class="page-link" value="1" onclick="GetValueButton(this.value)">Primer</button>
                </li>
                <li class="page-item">
                    @{ int p = int.Parse(ViewData["currentPage"].ToString()) - 1;}
                    <button class="page-link" value="@p" onclick="GetValueButton(this.value)">Anterior</button>
                </li>
            }
            else
            {
                <li class="page-item">
                    <button type="button" class="page-link">Primer<span class="sr-only"></span></button>
                </li>
                <li class="page-item">
                    <button type="button" class="page-link">Anterior<span class="sr-only"></span></button>
                </li>
            }

            @for (var pagina = 1; pagina <= int.Parse(ViewData["totalPages"].ToString()); pagina++)
            {
                <li class="page-item @(pagina == int.Parse(ViewData["currentPage"].ToString()) ? "active" : "")">
                    @if (pagina == int.Parse(ViewData["currentPage"].ToString()))
                    {
                        <button type="button" class="page-link" value="@pagina" role="button">@(pagina)<span class="sr-only"></span></button>
                    }
                    else
                    {
                        <button class="page-link" value="@pagina" onclick="GetValueButton(this.value)">@(pagina)</button>
                    }
                </li>
            }

            @if (int.Parse(ViewData["currentPage"].ToString()) < int.Parse(ViewData["totalPages"].ToString()))
            {
                <li class="page-item">
                    @{int n = int.Parse(ViewData["currentPage"].ToString()) + 1;}
                    <button class="page-link" value="@n" onclick="GetValueButton(this.value)">Siguiente</button>
                </li>
                <li class="page-item">
                    <button class="page-link" value="@ViewData["totalPages"]" onclick="GetValueButton(this.value)">&Uacute;ltimo</button>
                </li>
            }
            else
            {
                <li class="page-item">
                    <button type="button" class="page-link">Siguiente<span class="sr-only"></span></button>
                </li>
                <li class="page-item">
                    <button type="button" class="page-link">&Uacute;ltimo<span class="sr-only"></span></button>
                </li>
            }
        </ul>
    </form>
</nav>
<script>
    var _0x5971 = ['#resetear', 'POST', '749564oyOISr', '255775lwlvZP', 'form', 'location', '[name=\x27currentPage\x27]', '1MFreuZ', 'change', '31533ZngBAZ', '736163GbJVsH', 'click', '/Error/', 'ajax', 'Asignado', '116168FvhoDi', 'val', 'href', 'fail', '381998PznOnf', 'select[name=\x27sizePage\x27]\x20option', 'status', '552116UWdVwG', '#view-all', 'select']; var _0x4d389f = _0x2b47; (function (_0x63c73f, _0x12ad36) { var _0x59ccd3 = _0x2b47; while (!![]) { try { var _0x4b800d = parseInt(_0x59ccd3(0xb4)) * parseInt(_0x59ccd3(0xb1)) + -parseInt(_0x59ccd3(0xac)) + -parseInt(_0x59ccd3(0xad)) + parseInt(_0x59ccd3(0xbd)) + parseInt(_0x59ccd3(0xb3)) + parseInt(_0x59ccd3(0xa7)) + -parseInt(_0x59ccd3(0xb9)); if (_0x4b800d === _0x12ad36) break; else _0x63c73f['push'](_0x63c73f['shift']()); } catch (_0x253b14) { _0x63c73f['push'](_0x63c73f['shift']()); } } }(_0x5971, 0x8dacf)); function GetValueButton(_0x2a4d84) { var _0x4a8fec = _0x2b47; $(_0x4a8fec(0xb0))[_0x4a8fec(0xba)](_0x2a4d84); } function _0x2b47(_0x4921a1, _0x2d90d2) { return _0x2b47 = function (_0x5971d6, _0x2b47e2) { _0x5971d6 = _0x5971d6 - 0xa6; var _0x52add5 = _0x5971[_0x5971d6]; return _0x52add5; }, _0x2b47(_0x4921a1, _0x2d90d2); } $(_0x4d389f(0xaa))['on'](_0x4d389f(0xb5), function () { var _0x3a55c7 = _0x4d389f; $('select[name=\x27filter\x27]\x20option')[_0x3a55c7(0xba)](_0x3a55c7(0xb8)), $(_0x3a55c7(0xbe))['val']('10'); }), send = _0x2e6fb8 => { var _0x40fa4d = _0x4d389f; return $['ajax']({ 'type': _0x40fa4d(0xab), 'url': _0x2e6fb8['action'], 'data': new FormData(_0x2e6fb8), 'contentType': ![], 'processData': ![], 'success': function (_0x54f99a) { var _0xbe8ce0 = _0x40fa4d; $(_0xbe8ce0(0xa8))['html'](_0x54f99a); } })[_0x40fa4d(0xbc)](function (_0x789fd9, _0x54b03e, _0x1b45a4) { var _0x46552b = _0x40fa4d; window[_0x46552b(0xaf)]['href'] = _0x46552b(0xb6) + _0x789fd9[_0x46552b(0xa6)]; }), ![]; }, $(_0x4d389f(0xa9))['on'](_0x4d389f(0xb2), function () { var _0x2cbdeb = _0x4d389f; $[_0x2cbdeb(0xb7)]({ 'type': _0x2cbdeb(0xab), 'url': this[_0x2cbdeb(0xae)]['action'], 'data': new FormData(this[_0x2cbdeb(0xae)]), 'contentType': ![], 'processData': ![], 'success': function (_0x22db1d) { $('#view-all')['html'](_0x22db1d); } })[_0x2cbdeb(0xbc)](function (_0x37afc0, _0x1e78c5, _0x34f53c) { var _0x82c4c5 = _0x2cbdeb; window['location'][_0x82c4c5(0xbb)] = _0x82c4c5(0xb6) + _0x37afc0[_0x82c4c5(0xa6)]; }); });
</script>