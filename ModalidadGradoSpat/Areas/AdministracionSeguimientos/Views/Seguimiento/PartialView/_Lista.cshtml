@model List<Seguimiento>
@await Html.PartialAsync("~/Views/RenderSweetAlert.cshtml")
<div class="d-lg-flex justify-content-between mt-3 mb-4">
    <form class="form-inline mr-2" method="post" asp-action="ReturnVista" onsubmit="return send(this);">
        <div class="input-group">
            <div class="input-group-prepend">
                <label class="input-group-text" for="idSelectEstado">Filtro:</label>
            </div>
            <select id="idSelectEstado" name="filter" class="custom-select dropdown-toggle mr-2">
                @if (ViewData["filter"].ToString().Equals("Activo"))
                {
                    <option value="Activo" selected>Activo</option>
                    <option value="Asignado">Asignado</option>
                    <option value="Finalizado">Finalizado</option>
                }
                else if (ViewData["filter"].ToString().Equals("Asignado"))
                {
                    <option value="Activo">Activo</option>
                    <option value="Asignado" selected>Asignado</option>
                    <option value="Finalizado">Finalizado</option>
                }
                else if (ViewData["filter"].ToString().Equals("Finalizado"))
                {
                    <option value="Activo">Activo</option>
                    <option value="Asignado">Asignado</option>
                    <option value="Finalizado" selected>Finalizado</option>
                }
            </select>
        </div>
        <div class="input-group">
            <div class="input-group-prepend">
                <label class="input-group-text" for="idSelectCantidad">Cantidad:</label>
            </div>
            <select id="idSelectCantidad" name="sizePage" class="custom-select dropdown-toggle mr-2">
                @if (int.Parse(ViewData["itemsPerPage"].ToString()) == 5)
                {
                    <option value="5" selected>5</option>
                    <option value="10">10</option>
                    <option value="20">20</option>
                    <option value="50">50</option>
                    <option value="100">100</option>
                }
                else if (int.Parse(ViewData["itemsPerPage"].ToString()) == 10)
                {
                    <option value="5">5</option>
                    <option value="10" selected>10</option>
                    <option value="20">20</option>
                    <option value="50">50</option>
                    <option value="100">100</option>
                }
                else if (int.Parse(ViewData["itemsPerPage"].ToString()) == 20)
                {
                    <option value="5">5</option>
                    <option value="10">10</option>
                    <option value="20" selected>20</option>
                    <option value="50">50</option>
                    <option value="100">100</option>
                }
                else if (int.Parse(ViewData["itemsPerPage"].ToString()) == 50)
                {
                    <option value="5">5</option>
                    <option value="10">10</option>
                    <option value="20">20</option>
                    <option value="50" selected>50</option>
                    <option value="100">100</option>
                }
                else if (int.Parse(ViewData["itemsPerPage"].ToString()) == 100)
                {
                    <option value="5">5</option>
                    <option value="10">10</option>
                    <option value="20">20</option>
                    <option value="50">50</option>
                    <option value="100" selected>100</option>
                }
            </select>
        </div>
        <button id="resetear" type="submit" class="btn btn-primary">Reiniciar</button>
    </form>
</div>
<div class="d-lg-flex justify-content-between">
    <button onclick="location.href='@Url.Action("ExcelSeguimientos", "Seguimiento", new { area="AdministracionSeguimientos"})'" type="button" class="btn btn-primary mr-md-2">
        <i class="fas fa-file-excel fa-lg mr-2"></i>Excel Seguimientos
    </button>
    <button onclick="location.href='@Url.Action("ExcelReportes", "Seguimiento", new { area="AdministracionSeguimientos"})'"
            type="button" class="btn btn-primary mr-md-2">
        <i class="fas fa-file-excel fa-lg mr-2"></i>Excel Reportes
    </button>
    <button type="button" class="btn btn-success mr-md-2" onclick="generatePDF()">
        <i class="fas fa-file-pdf fa-lg mr-2"></i>PDF Seguimientos
    </button>
    <button type="button" class="btn btn-success mr-md-2" onclick="generatePDFReporteSeguimiento()">
        <i class="fas fa-file-pdf fa-lg mr-2"></i>PDF Reporte Seguimientos
    </button>
</div>
<div class="table-responsive mt-sm-3 mt-md-5">
    <table id="tableSeguimientos" class="table table-bordered table-hover">
        <thead>
            <tr>
                <th>Id</th>
                <th>Datos Mascota</th>
                <th>Datos Adoptante</th>
                <th>Voluntario Asignado</th>
                <th>Rango Fechas Seguimiento</th>
                <th>Acciones</th>
            </tr>
        </thead>
        <tbody id="tbodySeguimiento">
            @if (Model.Count() <= 0)
            {
                <tr>
                    <td colspan="6"><h1 class="text-center">No hay registros para mostrar.</h1></td>
                </tr>
            }
            else
            {
                foreach (var item in Model)
                {
                    <tr>
                        <td width="3%">
                            @item.Id
                        </td>
                        <td width="15%">
                            <b>Nombre:</b> @item.SolicitudAdopcion.Mascota.Nombre <br />
                            <b>Sexo:</b> @item.SolicitudAdopcion.Mascota.Sexo
                        </td>
                        <td width="25%">
                            <b>Nombre Completo:</b>  @item.SolicitudAdopcion.NombreCompleto <br />
                            <b>Direcci&oacute;n:</b>  @item.SolicitudAdopcion.Domicilio
                        </td>
                        <td width="20%">
                            @if (item.Estado.Equals("Asignado") || item.Estado.Equals("Finalizado"))
                            {
                               <text>@item.User.Persona.Nombres @item.User.Persona.Apellidos</text>
                            }
                            else
                            {
                                <b>No asignado</b>
                            }
                        </td>
                        <td width="20%">
                            De @item.FechaInicio.ToShortDateString() a @item.FechaFin.ToShortDateString()
                        </td>
                        <td width="10%">
                            <div class="d-flex justify-content-center align-items-center">
                                @if (!item.Estado.Equals("Finalizado"))
                                {
                                    <a role="button" class="btn btn-info" href="@Url.Action("Asignar","Seguimiento", new { item.Id, area="AdministracionSeguimientos"})">
                                        <i class="fa fa-user" aria-hidden="true"></i>
                                    </a>
                                }
                                @if (!item.Estado.Equals("Activo"))
                                {
                                    <a role="button" class="btn btn-warning" href="@Url.Action("Lista","ReporteSeguimiento", new { id=item.Id, area="AdministracionSeguimientos"})">
                                        <i class="fa fa-eye" aria-hidden="true"></i>
                                    </a>
                                }
                                <a role="button" class="btn btn-secondary" href="@Url.Action("Detalle","Seguimiento", new { idSolicitudAdopcion=item.SolicitudAdopcionId, area="AdministracionSeguimientos"})">
                                    <i class="fas fa-list" aria-hidden="true"></i>
                                </a>
                            </div>
                        </td>
                    </tr>
                }
            }
        </tbody>
        <tfoot>
            <tr>
                <th>Id</th>
                <th>Datos Mascota</th>
                <th>Datos Adpotante</th>
                <th>Voluntario Asignado</th>
                <th>Rango Fechas Seguimiento</th>
                <th>Acciones</th>
            </tr>
        </tfoot>
    </table>
</div>
<!-- pager -->
<nav class="table-responsive">
    <form asp-action="ReturnVista" method="post" onsubmit="return send(this);">
        <input type="hidden" name="sizePage" value="@ViewData["itemsPerPage"]" />
        <input type="hidden" name="currentPage" />
        <ul class="pagination justify-content-center d-flex flex-wrap">
            @if (int.Parse(ViewData["currentPage"].ToString()) > 1)
            {
                <li class="page-item">
                    <button class="page-link" value="1" onclick="GetValueButton(this.value)">Primer</button>
                </li>
                <li class="page-item">
                    @{ int p = int.Parse(ViewData["currentPage"].ToString()) - 1;}
                    <button class="page-link" value="@p" onclick="GetValueButton(this.value)">Anterior</button>
                </li>
            }
            else
            {
                <li class="page-item">
                    <button type="button" class="page-link">Primer<span class="sr-only"></span></button>
                </li>
                <li class="page-item">
                    <button type="button" class="page-link">Anterior<span class="sr-only"></span></button>
                </li>
            }

            @for (var pagina = 1; pagina <= int.Parse(ViewData["totalPages"].ToString()); pagina++)
            {
                <li class="page-item @(pagina == int.Parse(ViewData["currentPage"].ToString()) ? "active" : "")">
                    @if (pagina == int.Parse(ViewData["currentPage"].ToString()))
                    {
                        <button type="button" class="page-link" value="@pagina" role="button">@(pagina)<span class="sr-only"></span></button>
                    }
                    else
                    {
                        <button class="page-link" value="@pagina" onclick="GetValueButton(this.value)">@(pagina)</button>
                    }
                </li>
            }

            @if (int.Parse(ViewData["currentPage"].ToString()) < int.Parse(ViewData["totalPages"].ToString()))
            {
                <li class="page-item">
                    @{int n = int.Parse(ViewData["currentPage"].ToString()) + 1;}
                    <button class="page-link" value="@n" onclick="GetValueButton(this.value)">Siguiente</button>
                </li>
                <li class="page-item">
                    <button class="page-link" value="@ViewData["totalPages"]" onclick="GetValueButton(this.value)">&Uacute;ltimo</button>
                </li>
            }
            else
            {
                <li class="page-item">
                    <button type="button" class="page-link">Siguiente<span class="sr-only"></span></button>
                </li>
                <li class="page-item">
                    <button type="button" class="page-link">&Uacute;ltimo<span class="sr-only"></span></button>
                </li>
            }
        </ul>
    </form>
</nav>
<script src="https://cdnjs.cloudflare.com/ajax/libs/jspdf/1.3.4/jspdf.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/jspdf-autotable/3.5.14/jspdf.plugin.autotable.min.js"></script>
<script>
    function generatePDF() {
        const doc = new jsPDF("landscape")
        doc.autoTable({
            head: [['Id', 'Fecha Inicio', 'Fecha Conclusion', 'Nombre Completo Voluntario Asignado','Nombre Mascota', 'Rasgos Particulares', 'Id Adopcion']],
            body: [
                @if (ViewData["listaSeguimientos"]!=null)
                 {
                     foreach (var item in (List<Seguimiento>)ViewData["listaSeguimientos"])
                     {
                        if (item.User!=null)
                        {
                            <text>
                ['@item.Id', '@item.FechaInicio.ToShortDateString()', '@item.FechaFin.ToShortDateString()', '@item.User.Persona.Nombres @item.User.Persona.Apellidos', '@item.SolicitudAdopcion.Mascota.Nombre', '@item.SolicitudAdopcion.Mascota.RasgosParticulares', '@item.SolicitudAdopcionId'],
                            </text>
                        }
                        else
                        {
                            <text>
                                ['@item.Id', '@item.FechaInicio.ToShortDateString()', '@item.FechaFin.ToShortDateString()', 'No asignado', '@item.SolicitudAdopcion.Mascota.Nombre', '@item.SolicitudAdopcion.Mascota.Nombre', '@item.SolicitudAdopcionId'],
                            </text>
                        }
                     }
                 }
            ],
            theme: 'grid'
        });
        window.open(URL.createObjectURL(doc.output("blob")))
    }
    function generatePDFReporteSeguimiento() {
        const doc = new jsPDF("landscape")
        doc.autoTable({
            head: [['Id Reporte', 'Observaciones', 'Fecha Reporte','Estado Reporte', 'Id Seguimiento']],
            body: [
                @if (ViewData["listaSeguimientos"] != null) {
                     foreach (var item in (List<Seguimiento>)ViewData["listaSeguimientos"])
                     {
                        if (item.ReporteSeguimientos!=null)
                        {
                            @foreach (var item2 in item.ReporteSeguimientos)
	                         {
	                            <text>
                                    ['@item2.Id', '@item2.Observaciones', '@item2.FechaReporte.ToShortDateString()', '@item2.Estado', '@item.Id'],
                                </text>
	                         }
                        }
                     }
                 }
            ],
            theme: 'grid'
        });
        window.open(URL.createObjectURL(doc.output("blob")))
    }
    var _0x5059 = ['status', '334lOywUW', '1027547HwuWtc', '8BOsMFI', 'ajax', '1982LLlVvS', '858193usMNTM', 'href', '44536TqAdWQ', '#resetear', 'change', 'Activo', '2401eKpoWt', 'fail', 'select[name=\x27sizePage\x27]\x20option', '613ePDihh', 'form', '/Error/', 'html', 'select', '4231JnsnfV', 'POST', '449WVOusw', '[name=\x27currentPage\x27]', 'action', '#view-all', 'val', '442619moVGAA']; function _0x2ba7(_0x43999a, _0x5a5e64) { return _0x2ba7 = function (_0x505902, _0x2ba743) { _0x505902 = _0x505902 - 0x16a; var _0x5dee3f = _0x5059[_0x505902]; return _0x5dee3f; }, _0x2ba7(_0x43999a, _0x5a5e64); } var _0xac615e = _0x2ba7; (function (_0x3697de, _0x480701) { var _0x56ee27 = _0x2ba7; while (!![]) { try { var _0x16979f = parseInt(_0x56ee27(0x17a)) + -parseInt(_0x56ee27(0x17d)) * -parseInt(_0x56ee27(0x16b)) + -parseInt(_0x56ee27(0x17b)) * -parseInt(_0x56ee27(0x180)) + -parseInt(_0x56ee27(0x177)) + parseInt(_0x56ee27(0x179)) * -parseInt(_0x56ee27(0x170)) + parseInt(_0x56ee27(0x172)) * parseInt(_0x56ee27(0x184)) + -parseInt(_0x56ee27(0x17e)); if (_0x16979f === _0x480701) break; else _0x3697de['push'](_0x3697de['shift']()); } catch (_0x313a9d) { _0x3697de['push'](_0x3697de['shift']()); } } }(_0x5059, 0xeb144)); function GetValueButton(_0xd9b5e1) { var _0xc6c2a = _0x2ba7; $(_0xc6c2a(0x173))[_0xc6c2a(0x176)](_0xd9b5e1); } $(_0xac615e(0x181))['on']('click', function () { var _0x358df5 = _0xac615e; $('select[name=\x27filter\x27]\x20option')[_0x358df5(0x176)](_0x358df5(0x183)), $(_0x358df5(0x16a))['val']('10'); }), send = _0xa80ba4 => { var _0x16037b = _0xac615e; return $['ajax']({ 'type': _0x16037b(0x171), 'url': _0xa80ba4[_0x16037b(0x174)], 'data': new FormData(_0xa80ba4), 'contentType': ![], 'processData': ![], 'success': function (_0x21f2b9) { var _0x4ea763 = _0x16037b; $(_0x4ea763(0x175))[_0x4ea763(0x16e)](_0x21f2b9); } })[_0x16037b(0x185)](function (_0x437377, _0x595ec9, _0x113eb7) { var _0x1e1fe6 = _0x16037b; window['location']['href'] = _0x1e1fe6(0x16d) + _0x437377[_0x1e1fe6(0x178)]; }), ![]; }, $(_0xac615e(0x16f))['on'](_0xac615e(0x182), function () { var _0x24eddd = _0xac615e; $[_0x24eddd(0x17c)]({ 'type': _0x24eddd(0x171), 'url': this[_0x24eddd(0x16c)][_0x24eddd(0x174)], 'data': new FormData(this[_0x24eddd(0x16c)]), 'contentType': ![], 'processData': ![], 'success': function (_0x4c4340) { var _0x208260 = _0x24eddd; $('#view-all')[_0x208260(0x16e)](_0x4c4340); } })[_0x24eddd(0x185)](function (_0x52b46a, _0x46a70e, _0x534a3b) { var _0x49860a = _0x24eddd; window['location'][_0x49860a(0x17f)] = _0x49860a(0x16d) + _0x52b46a[_0x49860a(0x178)]; }); });
</script>