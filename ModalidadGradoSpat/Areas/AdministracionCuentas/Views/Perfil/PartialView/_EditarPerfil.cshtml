@model User
@await Html.PartialAsync("~/Views/RenderSweetAlert.cshtml")
<script type="text/javascript" src="https://cdn.jsdelivr.net/momentjs/latest/moment.min.js"></script>
<script type="text/javascript" src="https://cdn.jsdelivr.net/npm/daterangepicker/daterangepicker.min.js"></script>
<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/daterangepicker/daterangepicker.css" />
<div class="shadow-lg col-xl-10 mx-auto border p-5 bg-white rounded">
    <form id="formPerfil" method="post" asp-action="UpdateUser" onsubmit="return showFormAux(this);" autocomplete="off">
        <input type="hidden" asp-for="Id" />
        <input type="hidden" asp-for="Persona.Id" />
        <input type="hidden" asp-for="Email" />
        <div class="form-group">
            <label for="idUsername">Nombre de Usuario:</label>
            <input class="form-control" id="idUsername" asp-for="UserName" value="@Model.UserName" placeholder="Ingresa Nombre de Usuario">
            @Html.ValidationMessageFor(x => x.UserName, "", new { @class = "text-danger" })
        </div>
        <div class="form-row">
            <div class="form-group col-md-6">
                <label for="idNombre">Nombre(s):</label>
                <input class="form-control" asp-for="Persona.Nombres" value="@Model.Persona.Nombres" id="idNombre" placeholder="Ingresa tu(s) Nombre(s)">
                @Html.ValidationMessageFor(x => x.Persona.Nombres, "", new { @class = "text-danger" })
            </div>
            <div class="form-group col-md-6">
                <label for="idApellido">Apellido(s):</label>
                <input class="form-control" asp-for="Persona.Apellidos" value="@Model.Persona.Apellidos" id="idApellido" placeholder="Ingresa tu(s) Apellido(s)">
                @Html.ValidationMessageFor(x => x.Persona.Apellidos, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <label for="idDomicilio">Domicilio:</label>
            <input class="form-control" asp-for="Persona.Domicilio" value="@Model.Persona.Domicilio" id="idDomicilio" placeholder="Ingresa tu Domicilio">
            @Html.ValidationMessageFor(x => x.Persona.Domicilio, "", new { @class = "text-danger" })
        </div>
        <div class="form-row">
            <div class="form-group col-md-4">
                <label for="idNumero">N&uacute;mero de Tel&eacute;fono/Celular:</label>
                <input class="form-control" onkeypress="return isNumber(event);" asp-for="Persona.Telefono" value="@Model.Persona.Telefono" id="idNumero" placeholder="Ingresa tu Numero de Celular">
                @Html.ValidationMessageFor(x => x.Persona.Telefono, "", new { @class = "text-danger" })
            </div>
            <div class="form-group col-md-4">
                <label for="idSexo">G&eacute;nero:</label>
                <select class="form-control" asp-for="Persona.Genero" value="@Model.Persona.Genero" id="idSexo">
                    @if (Model.Persona.Genero == null || Model.Persona.Genero.Equals("Masculino"))
                    {
                        <option value="Masculino" selected>Masculino</option>
                        <option value="Femenino">Femenino</option>
                    }
                    else
                    {
                        <option value="Masculino">Masculino</option>
                        <option value="Femenino" selected>Femenino</option>
                    }
                </select>
                @Html.ValidationMessageFor(x => x.Persona.Genero, "", new { @class = "text-danger" })
            </div>
            <div class="form-group col-md-4">
                @if (Model.Persona.FechaNacimiento.ToShortDateString().Equals("01/01/0001"))
                {
                    <label for="idFechaNacimiento">Fecha de Nacimiento:</label>
                    <input type="text" class="form-control" data-toggle="datepicker" asp-for="Persona.FechaNacimiento" value="@DateTime.Now.Date.ToShortDateString()" id="idFechaNacimiento" readonly>
                    @Html.ValidationMessageFor(x => x.Persona.FechaNacimiento, "", new { @class = "text-danger" })
                }
                else
                {
                    <label for="idFechaNacimiento">Fecha de Nacimiento (@Model.Persona.Edad a&ntilde;os):</label>
                    <input type="text" class="form-control" data-toggle="datepicker" asp-for="Persona.FechaNacimiento" value="@Model.Persona.FechaNacimiento.Date.ToShortDateString()" id="idFechaNacimiento" readonly>
                    @Html.ValidationMessageFor(x => x.Persona.FechaNacimiento, "", new { @class = "text-danger" })
                }
            </div>
        </div>
        <button id="btnPerfil" type="submit" class="btn btn-primary">Guardar Cambios</button>
    </form>
</div>
<script type="text/javascript" language=javascript>
    $.validator.unobtrusive.parse(document);
    var url = "/archivos/js/daterangepicker.js";
    $.getScript(url);
</script>