@model IEnumerable<User>
@await Html.PartialAsync("~/Views/RenderSweetAlert.cshtml")
<script type="text/javascript" src="https://cdn.jsdelivr.net/momentjs/latest/moment.min.js"></script>
<script type="text/javascript" src="https://cdn.jsdelivr.net/npm/daterangepicker/daterangepicker.min.js"></script>
<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/daterangepicker/daterangepicker.css" />
<div class="d-flex justify-content-between">
    <div class="mb-3">
        <button type="button" data-toggle="modal" onclick="showInPopup('@Url.Action("AddUsuario","Cuenta", new { area="AdministracionCuentas"})', 'Agregar Usuario');" class="btn btn-primary">Agregar Usuario</button>
    </div>
    <form class="mb-3" asp-action="ExcelUsuario">
        <button type="submit" class="btn btn-primary">Excel Usuarios</button>
    </form>
</div>
<div class="table-responsive">
    <table id="example" class="table table-striped table-bordered" style="width:100%">
        <thead>
            <tr>
                <th>Id</th>
                <th>Nombre Completo</th>
                <th>Domicilio</th>
                <th>Nombre de Usuario</th>
                <th>Correo</th>
                <th>Fecha de Nacimiento</th>
                <th>Edad</th>
                <th>Roles</th>
                <th>Estado</th>
                <th>Acciones</th>
            </tr>
        </thead>
        <tbody id="tbodyCuentas">
            @foreach (var item in Model)
            {
                @if (!item.Roles.Contains("SuperAdministrador"))
                {
            <tr>
                <td>@item.Id</td>
                <td>@item.Nombres @item.Apellidos</td>
                <td>@item.Domicilio</td>
                <td>@item.UserName</td>
                <td>@item.Email</td>
                <td>@item.FechaNacimiento.ToShortDateString()</td>
                <td>@item.Edad a&ntilde;os</td>
                <td>
                    @if (item.Roles == null)
                    {
                        <p class="text-center">No tiene roles asignados.</p>
                    }
                    else
                    {
                        <p class="text-center">
                            @foreach (var rol in item.Roles)
                            {
                                @rol<br />
                            }
                        </p>
                    }
                </td>
                <td>
                    @if (item.Estado.Equals("Activo"))
                    {
                        <h5><span class="badge badge-pill p-2 badge-primary">@item.Estado</span></h5>
                    }
                    else
                    {
                        <h5><span class="badge badge-pill p-2 badge-danger">@item.Estado</span></h5>
                    }
                </td>
                <td>
                    <div class="d-flex flex-row">
                        @if (item.Roles.Contains("SuperAdministrador"))
                        {
                            <button type="button" class="btn btn-primary" disabled>Asignar Roles</button>
                        }
                        else
                        {
                            <button type="button" class="btn btn-primary" data-toggle="modal" onclick="showInPopup('@Url.Action("AsignarRoles","Cuenta", new {id=item.Id, roles=item.Roles, area="AdministracionCuentas" })', 'Asignar Roles');">Asignar Roles</button>
                        }
                        <form asp-action="CambiarEstado" asp-route-idUser="@item.Id" method="post" onsubmit="return cambiarEstado(this);">
                            <button type="submit" class="btn btn-warning">Cambiar Estado</button>
                        </form>
                        <form asp-action="EliminarUsuario" asp-route-idUser="@item.Id" method="post" onsubmit="return eliminarUsuario(this);">
                            <button type="submit" class="btn btn-danger">Eliminar Usuario</button>
                        </form>
                    </div>
                </td>
            </tr>
                }
            }
        </tbody>
        <tfoot>
            <tr>
                <th>Id</th>
                <th>Nombre Completo</th>
                <th>Domicilio</th>
                <th>Nombre de Usuario</th>
                <th>Correo</th>
                <th>Fecha de Nacimiento</th>
                <th>Edad</th>
                <th>Roles</th>
                <th>Estado</th>
                <th>Acciones</th>
            </tr>
        </tfoot>
    </table>
</div>
<script type="text/javascript">
    $('#example').DataTable({
        "processing": true,
        "language": {
            "sProcessing": "Procesando...",
            "sLengthMenu": "Mostrar _MENU_ registros",
            "sZeroRecords": "No se encontraron resultados",
            "sEmptyTable": "Ningún dato disponible en esta tabla =(",
            "sInfo": "Mostrando registros del _START_ al _END_ de un total de _TOTAL_ registros",
            "sInfoEmpty": "Mostrando registros del 0 al 0 de un total de 0 registros",
            "sInfoFiltered": "(filtrado de un total de _MAX_ registros)",
            "sInfoPostFix": "",
            "sSearch": "Buscar:",
            "sUrl": "",
            "sInfoThousands": ",",
            "sLoadingRecords": "Cargando...",
            "oPaginate": {
                "sFirst": "Primero",
                "sLast": "Último",
                "sNext": "Siguiente",
                "sPrevious": "Anterior"
            },
            "oAria": {
                "sSortAscending": ": Activar para ordenar la columna de manera ascendente",
                "sSortDescending": ": Activar para ordenar la columna de manera descendente"
            },
            "buttons": {
                "copy": "Copiar",
                "colvis": "Visibilidad"
            }
        }
    });
    eliminarUsuario = form => {
        event.preventDefault();
        try {
            Swal.fire({
                title: '¿Estás seguro de eliminar este usuario?',
                text: "El usuario actual se eliminará por completo.",
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Aceptar',
                cancelButtonText: 'Cancelar'
            }).then((result) => {
                if (result.value) {
                    $.ajax({
                        type: "POST",
                        url: form.action,
                        data: new FormData(form),
                        contentType: false,
                        processData: false,
                        success: function (res) {
                            $('#view-all').html(res.html);
                        },
                        error: function (err) {
                            console.log(err);
                        }
                    })
                        .fail(function (jqXHR, textStatus, errorThrown) {
                            window.location.href = "/Home/Error";
                        })
                    return false;
                }
            })
        } catch (e) {
            console.log(e);
        }
    };
    cambiarEstado = form => {
        try {
            $.ajax({
                type: "POST",
                url: form.action,
                data: new FormData(form),
                contentType: false,
                processData: false,
                success: function (res) {
                    if (res.isValid) {
                        $('#view-all').html(res.html);
                    }
                },
                error: function (err) {
                    console.log(err);
                }
            })
                .fail(function (jqXHR, textStatus, errorThrown) {
                    window.location.href = "/Home/Error";
                })
            //para prevenir el evento submit del form
            return false;
        } catch (e) {
            console.log(e);
        }
    };
</script>