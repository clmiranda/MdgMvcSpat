@model ResetPassword
@await Html.PartialAsync("~/Views/RenderSweetAlert.cshtml")
<style>
    .form-group i {
        cursor: pointer;
    }
</style>
<div class="row justify-content-center">
    <div class="col-sm-12 col-lg-6">
        <div class="card o-hidden border-0 shadow-lg my-5">
            <div class="card-header text-center">Reestablecer Contrase&ntilde;a</div>
            <div class="card-body p-0">
                <div class="row">
                    <div class="col-12">
                        <div class="p-3">
                            <form class="user" autocomplete="off" asp-action="SendDataResetPassword" onsubmit="return showFormAux(this);" method="post">
                                <input type="hidden" asp-for="Email" class="form-control" />
                                <input type="hidden" asp-for="Token" class="form-control" />
                                <div class="form-group">
                                    <div class="input-group">
                                        <input asp-for="Password" type="password" class="form-control form-control-user" id="idPassword" name="Password" placeholder="Ingresa tu Nueva Contraseña" autocomplete="off" autofocus>
                                        <div class="input-group-append">
                                            <span class="input-group-text"><i class="far fa-eye"></i></span>
                                        </div>
                                    </div>
                                    @Html.ValidationMessageFor(x => x.Password, "", new { @class = "text-danger" })
                                    <ul>
                                        <li id="charac">Requiere M&iacute;nimo 8 caracteres</li>
                                        <li id="lower">Necesita una Min&uacute;scula</li>
                                        <li id="mayus">Necesita una May&uacute;scula</li>
                                        <li id="numbe">Necesita un N&uacute;mero (0-9)</li>
                                        <li id="special">Necesita un Caracter Especial (*,+)</li>
                                    </ul>
                                </div>
                                <div class="form-group">
                                    <input asp-for="ConfirmPassword" type="password" class="form-control form-control-user" id="idConfirmPassword" name="ConfirmPassword" autocomplete="off" placeholder="Repite tu nueva Contraseña">
                                    @Html.ValidationMessageFor(x => x.ConfirmPassword, "", new { @class = "text-danger" })
                                </div>
                                <button class="btn btn-primary btn-user btn-block" type="submit">
                                    Confirmar
                                </button>
                            </form>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<script>
    var togglePassword = document.querySelector('.fa-eye');
    var password = document.querySelector('#idPassword');
    togglePassword.addEventListener('click', function (e) {
        var type = password.getAttribute('type') === 'password' ? 'text' : 'password';
        password.setAttribute('type', type);
        this.classList.toggle('fa-eye-slash');
    });
    $(document).ready(function () {
        var mayus = new RegExp("^(?=.*[A-Z])");
        var special = new RegExp("^(?=.*[!@@#$%&*])");
        var numbe = new RegExp("^(?=.*[0-9])");
        var lower = new RegExp("^(?=.*[a-z])");
        var charac = new RegExp("^(?=.{8,})");

        var regExp = [mayus, special, numbe, lower, charac];
        var elem = [$("#mayus"), $("#special"), $("#numbe"), $("#lower"), $("#charac")];

        $("#idPassword").on("keyup", function () {
            var pass = $("#idPassword").val();
            for (var i = 0; i < 5; i++) {
                if (regExp[i].test(pass)) {
                    elem[i].hide();
                }
                else {
                    elem[i].show();
                }
            }
        });
    });
    showFormAux = form => {
        //alert($("form").valid());
        event.preventDefault();
        if ($("form").valid()) {
            $.ajax({
                type: "POST",
                url: form.action,
                data: new FormData(form),
                contentType: false,
                processData: false,
                success: function (res) {
                    if (res.html != null) {
                        $('#body-content-action').html(res.html);
                    }
                    else if (res.url != null) {
                        window.location.href = res.url;
                    }
                },
                error: function (err) {
                    //alert("error");
                }
            })
                .fail(function (jqXHR, textStatus, errorThrown) {
                    window.location.href = "/Home/Error";
                })
            return false;
        }
    };
</script>